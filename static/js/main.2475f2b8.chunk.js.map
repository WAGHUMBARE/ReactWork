{"version":3,"sources":["Components/Alert.js","Components/First.js","Components/Second.js","Components/Third.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","msg","First","Fragment","mode","Link","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","aria-labelledby","onClick","toggleMode","htmlFor","Second","_useState","useState","_useState2","_slicedToArray","text","setText","head","rows","style","backgroundColor","color","value","onChange","event","target","console","log","toUpperCase","showAlert","toLowerCase","split","length","Third","data-bs-parent","defaultProps","Danger","App","setAlert","_useState3","_useState4","setMode","Router","document","body","Routes","Route","exact","path","element","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2475f2b8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n      {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n// import \"../CSS/First.css\";\r\nexport default function First(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} text-white`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Navbar\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle\"\r\n                  href=\"#\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              \r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <div className=\"form-check form-switch\" >\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"flexSwitchCheckChecked\"\r\n                  onClick={props.toggleMode}\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${props.mode === 'light'?'dark':'light'}`}\r\n                  htmlFor=\"flexSwitchCheckChecked\"\r\n                >\r\n                  Enable Dark Mode\r\n                </label>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nFirst.propTypes = {\r\n  Danger: PropTypes.string,\r\n};\r\nFirst.defaultProps = {\r\n  Danger: \"stranger\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Second(props) {\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  function upper() {\r\n    console.log(\"Upper\");\r\n    setText(text.toUpperCase())\r\n    props.showAlert(\"Text converted to uppercase\",\"success\");\r\n  }\r\n  function lower() {\r\n    setText(text.toLowerCase())\r\n  }\r\n  function handleOnChange(event){\r\n    setText(event.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center my2\">{props.head}</h1>\r\n      <div className=\"container mb-3\">\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n          Textarea\r\n        </label>\r\n        <textarea\r\n          className={`form-control`}\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"3\"\r\n          style={{backgroundColor : props.mode === 'light'?'white':'#612d59',\r\n          color : props.mode === 'light'?'black':'white'}}\r\n          value={text}\r\n          onChange={handleOnChange}\r\n        >\r\n        </textarea>\r\n        <button type=\"button\" onClick={upper} className=\"btn btn-primary mx-1 my-1\">\r\n          UpperCase\r\n        </button>\r\n        <button type=\"button\" onClick={lower} className=\"btn btn-primary mx-1 my-1\">\r\n          LowerCase\r\n        </button>\r\n      </div>\r\n      <div className=\"container\">\r\n        <h2>Text Summary</h2>\r\n        <p>{text.split(\" \").length} Words and {text.length} Chars</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nSecond.defaultProps = {\r\n    head: \"stranger\",\r\n  };\r\n  \r\n","import React from \"react\";\r\n\r\nexport default function Third() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"text-center my2\">About Page</h3>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classNamees that we use to style each element. These classNamees control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport Alert from \"./Components/Alert\";\nimport First from \"./Components/First\";\nimport Second from \"./Components/Second\";\nimport Third from \"./Components/Third\";\nimport { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#7f7f8f\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n\n  return (\n    <Router>\n      <>\n        <First mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <Routes>\n          <Route exact path=\"/about\" element={<Third />}></Route>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <Second head=\"Text Analyzer\" mode={mode} showAlert={showAlert} />\n            }\n          ></Route>\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}